{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","props","messageClass","src","alt","App","useAuthState","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAUAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAiB3B,SAASC,IAMP,OACE,gCACE,wBAAQC,UAAU,UAAUC,QAPP,WACvB,IAAMC,EAAW,IAAId,IAASS,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAKnB,iCAGA,2GAON,SAASG,IACP,OACER,EAAKS,aACH,wBAAQN,UAAU,WAAWC,QAAS,kBAAMJ,EAAKU,WAAjD,sBAON,SAASC,IACP,IAAMC,EAAQC,mBAERC,EAAcb,EAAUc,WAAW,YAEnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAErD,EAAmBC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAAP,oBAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGMC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQ5B,EAAKS,YAAvBoB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAW1C,IAASU,UAAUiC,WAAWC,kBACzCN,MACAC,aATgB,OAYlBN,EAAa,IACbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAbvB,2CAAH,sDAgBjB,OACE,qCACE,iCACGjB,GACCA,EAASkB,KAAI,SAACC,GAAD,OAAS,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAC9C,sBAAMC,IAAKhC,OAGb,uBAAMiC,SAAUpB,EAAhB,UACE,uBACEqB,MAAOvB,EACPwB,SAAU,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,QACvCG,YAAY,uBAEd,wBAAQC,KAAK,SAAb,sCAKR,SAAST,EAAYU,GACnB,MAAgCA,EAAMT,QAA9BV,EAAR,EAAQA,KAAMH,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,SACbsB,EAAevB,IAAQ7B,EAAKS,YAAYoB,IAAM,OAAS,WAC7D,OACE,mCACE,sBAAK1B,UAAS,kBAAaiD,GAA3B,UACE,qBACEC,IACEvB,GAAY,wDAEdwB,IAAI,WAEN,4BAAItB,SAMGuB,MA5Gf,WACE,MAAeC,YAAaxD,GAArByD,EAAP,oBAEA,OACE,sBAAKtD,UAAU,MAAf,UACE,mCACE,wEACA,cAACK,EAAD,OAGF,kCAAUiD,EAAO,cAAC9C,EAAD,IAAe,cAACT,EAAD,UC7BtCwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1d0f0551.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./App.css\";\n\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAU7dYQmQ-IDxOCH9ii12_Xcl7anNHvcSI\",\n  authDomain: \"chat-app-28c36.firebaseapp.com\",\n  projectId: \"chat-app-28c36\",\n  storageBucket: \"chat-app-28c36.appspot.com\",\n  messagingSenderId: \"847767015991\",\n  appId: \"1:847767015991:web:4e14be9d47dad562c925b2\",\n  measurementId: \"G-W9D3B7TKNE\",\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>‚öõÔ∏èüî• üí¨ </h1>\n        <SignOut />\n      </header>\n\n      <section>{user ? <ChatRoom /> : <SignIn />}</section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <div>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>\n        Sign in with Google\n      </button>\n      <p>\n        Do not violate the community guidelines or you will be banned for life!\n      </p>\n    </div>\n  );\n}\n\nfunction SignOut() {\n  return (\n    auth.currentUser && (\n      <button className=\"sign-out\" onClick={() => auth.signOut()}>\n        Sign out\n      </button>\n    )\n  );\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  // reference a firestore collection\n  const messagesRef = firestore.collection(\"messages\");\n  // query documents in a collection and limit to a max of 25\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\n  // listen to data with a hook and reacts to changes in realtime\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n  //\n  const [formValue, setFormValue] = useState(\"\");\n\n  // create a new document in firestore\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n    });\n\n    setFormValue(\"\");\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (\n    <>\n      <main>\n        {messages &&\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n        <span ref={dummy}></span>\n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          onChange={(e) => setFormValue(e.target.value)}\n          placeholder=\"say something nice\"\n        />\n        <button type=\"submit\">üïäÔ∏è</button>\n      </form>\n    </>\n  );\n}\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? \"sent\" : \"received\";\n  return (\n    <>\n      <div className={`message ${messageClass}`}>\n        <img\n          src={\n            photoURL || \"https://api.adorable.io/avatars/23/abott@adorable.png\"\n          }\n          alt=\"avatar\"\n        />\n        <p>{text}</p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}